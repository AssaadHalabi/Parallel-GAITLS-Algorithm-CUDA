Input: Graph G(V, E, W), cutoff time, population size IndiNum, alpha parameter
Output: Best solution DT*

// Step 1: Initialize the population
POP = InitRCL(G, IndiNum, alpha)

// Step 2: Set the best solution as the individual with the best objective in POP
DT* = individual with the best objective in POP

// Step 3: Start the main loop until the elapsed time is less than cutoff time
while elapsed time is less than cutoff time do
    index = 0
    // Step 3.1: Apply the ITLS algorithm to each individual in POP
    for each individual in POP do
        POP[index] = ITLS(POP[index])
        // Update the best solution if the current individual is better
        if POP[index] is better than DT* then
            DT* = POP[index]
        end
        index++
    end
    index = 0
    // Step 3.2: Apply the MutationHD operator to each individual in POP
    for each individual in POP do
        POP[index] = MuatationHD(POP[index])
        // Update the best solution if the current individual is better
        if POP[index] is better than DT* then
            DT* = POP[index]
        end
        index++
    end
end

// Step 4: Return the best solution
return DT*
