Input: The graph G(V, E, W), the cutoff time, the current solution DT
Output: the local best solution DT'
tabu_list <- 0;
DT' <- DT;
for each vertex v ∈ V do
    if v ∈ DT then
        Dscore[v]<- -1 * |{u|u ∈ N[v] and u is just dominated by v}|;
    end
    else
        Dscore[v] <- |{u|u ∈ N[v] and is non-dominated }|;
    end
end


repeat
    if there is no non-dominated vertex and DT is connected then
        remove the redundant vertexes;
        connect the vertexes in DT by constructing the minimum spanning tree;
        if DT is better than DT' then
            DT' <- DT;
        end
    end
    /************Removing Phase**********/
    while there is no non-dominated vertex do
        remove a vertex v in DT and not in tabu_list with the highest value Dscore[v], breaking ties in the oldest one;
        update the Dscore;
    end
    /************Dominating Phase**********/
    tabu_list <- 0;
    while there are non-dominated vertex do
        add a vertex v not in DT with lowest Wscore[v]/Dscore[v], breaking ties in the oldest one;
        tabu_list <- tabu_list ⋃{v};
        update the Dscore;
    end
    /************Connecting Phase**********/
    while DT is not connected do
        find the shortest path between the components;
        add the vertexes along the path to the DT;
        tabu_list <- tabu_list ⋃{v}
        update the Dscore;
    end
until the stop criterion is not met;